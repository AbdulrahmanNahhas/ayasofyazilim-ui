'use client';

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/bjRyoIzlUob
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Libre_Franklin } from 'next/font/google'
import { Archivo } from 'next/font/google'

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

archivo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
* */

/** Add border radius CSS variable to your global CSS:

:root {
  --radius: 0.5rem;
}
* */
import React from 'react';
import { Card, CardTitle } from '@/components/ui/card';
import { TabsTrigger, TabsList, TabsContent, Tabs } from '@/components/ui/tabs';
import {
  TableHead,
  TableRow,
  TableHeader,
  TableCell,
  TableBody,
  Table,
} from '@/components/ui/table';
import { Button } from '@/components/ui/button';
import { issueFormProps } from './type';
import { Label } from '@/components/ui/label';

export type { issueFormProps } from './type';

export default function Issueform({ tag }: issueFormProps) {
  return (
    <div className="grid grid-cols-1 md:grid-cols-[1fr_300px] gap-6 p-6 w-full">
      <div className="grid gap-6">
        <Card className="p-6">
          <div className="grid gap-4">
            <div className="flex items-center justify-between">
              <h2 className="text-2xl font-bold">Tag summary</h2>
              <div className="flex items-center gap-2">
                <CalendarDaysIcon className="w-5 h-5 text-gray-500 " />
                <span className="text-sm text-gray-500 ">
                  {tag.Summary.IssuedDate} - {tag.Summary.ExpireDate}
                </span>
              </div>
            </div>
            <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-4">
              <div className="bg-gray-100  rounded-lg p-4 flex flex-col gap-2">
                <div className="text-sm text-gray-500 ">Tax Free Tag ID</div>
                <div className="text-3xl font-bold">{tag.Summary.Tag}</div>
              </div>
              <div className="bg-gray-100  rounded-lg p-4 flex flex-col gap-2">
                <div className="text-sm text-gray-500 ">Status</div>
                <div className="text-3xl font-bold">
                  {tag.Summary.Status === 1 ? 'Approved' : 'Pending'}
                </div>
              </div>
              <div className="bg-gray-100  rounded-lg p-4 flex flex-col gap-2">
                <div className="text-sm text-gray-500 ">Issued Date</div>
                <div className="text-xl font-bold">
                  {tag.Summary.IssuedDate}
                </div>
                <div className="text-sm text-gray-500 ">Expire Date</div>
                <div className="text-xl font-bold">
                  {tag.Summary.ExpireDate}
                </div>
              </div>
            </div>
            <div className="grid sm:grid-cols-3 gap-4">
              <Card className="p-4">
                <CardTitle>Export Validation</CardTitle>
                <div className="grid gap-2 pt-2">
                  <div className="text-sm text-gray-500 ">
                    Export date: {tag.ExportValidation.ExportDate}
                  </div>
                  <div className="text-sm text-gray-500 ">
                    Export location: {tag.ExportValidation.ExportLocation}
                  </div>
                  <div className="text-sm text-gray-500 ">
                    Stamp type:{' '}
                    {tag.ExportValidation.StampType === 1
                      ? 'Stamp'
                      : 'No Stamp'}
                  </div>
                </div>
              </Card>
              <Card className="p-4">
                <CardTitle>Refund</CardTitle>
                <div className="grid gap-2 pt-2">
                  <div className="text-sm text-gray-500 ">
                    Submission date: {tag.Refund.SubmissionDate}
                  </div>
                  <div className="text-sm text-gray-500 ">
                    Paid date: {tag.Refund.PaidDate}
                  </div>
                  <div className="text-sm text-gray-500 ">
                    Refund location: {tag.Refund.RefundLocation.Name}
                  </div>
                  <div className="text-sm text-gray-500 ">
                    Status: {tag.Refund.Status === 1 ? 'Paid' : 'Pending'}
                  </div>
                  <div className="text-sm text-gray-500 ">
                    Refund method:{' '}
                    {tag.Refund.RefundMethod === 1 ? 'Cash' : 'Credit Card'}
                  </div>
                </div>
              </Card>
              <Card className="p-4">
                <CardTitle>Invoicing</CardTitle>
                <div className="grid gap-2 pt-2">
                  <div className="text-sm text-gray-500 ">
                    Invoice date: {tag.Invoicing.InvoicingDate}
                  </div>
                  <div className="text-sm text-gray-500 ">
                    Invoice number: {tag.Invoicing.InvoicingNumber}
                  </div>
                  <div className="text-sm text-gray-500 ">
                    Invoice status:{' '}
                    {tag.Invoicing.InvoicingStatus === 1 ? 'Paid' : 'Pending'}
                  </div>
                </div>
              </Card>
            </div>
          </div>
        </Card>
        <div className="border shadow-sm rounded-lg overflow-hidden">
          <Tabs defaultValue="merchants">
            <TabsList className="bg-gray-100  grid grid-cols-3">
              <TabsTrigger value="merchants">Purchase Details</TabsTrigger>
              <TabsTrigger value="travelers">Tag History</TabsTrigger>
              <TabsTrigger value="trips">Export Validation</TabsTrigger>
            </TabsList>
            <TabsContent value="merchants">
              <div className="grid grid-cols-1 md:grid-cols-[1fr_300px] gap-6 p-6 ">
                <div className="grid gap-6">
                  <Card className="p-4 max-w-96">
                    <CardTitle>TOTALS</CardTitle>
                    <div className="grid gap-2 pt-2">
                      {tag.Totals.map((total) => (
                        <div className="flex justify-between">
                          <div className="text-sm text-gray-500 ">
                            {total.Description}
                          </div>
                          <div className="text-sm text-gray-500 ">
                            {total.Amount}
                          </div>
                        </div>
                      ))}
                    </div>
                  </Card>
                </div>
                <div className="grid gap-6">
                  <Card className="p-4 max-w-96">
                    <CardTitle>EARNINGS</CardTitle>
                    <div className="grid gap-2 pt-2">
                      {tag.Earnings.map((earning) => (
                        <div className="flex justify-between">
                          <div className="text-sm text-gray-500 ">
                            {earning.Description}
                          </div>
                          <div className="text-sm text-gray-500 ">
                            {earning.Amount}
                          </div>
                        </div>
                      ))}
                    </div>
                  </Card>
                </div>
              </div>
            </TabsContent>
            <TabsContent value="travelers">
              {tag.Invoices.map((invoice) => (
                <Card className="m-2 p-1">
                  <div className="grid gap-4 m-2 p-1">
                    <div className="flex justify-around">
                      <div className="grid gap-1">
                        <Label>Invoice ID</Label>
                        <div className="font-medium">{invoice.Id}</div>
                      </div>
                      <div className="grid gap-1">
                        <Label>Invoice Amount</Label>
                        <div className="font-medium">{invoice.TotalAmount}</div>
                      </div>
                      <div className="grid gap-1">
                        <Label>Currency</Label>
                        <div className="font-medium">
                          {invoice.Currency.Currency}
                        </div>
                      </div>
                    </div>
                  </div>
                  <Table>
                    <TableHeader>
                      <TableRow>
                        <TableHead>ID</TableHead>
                        <TableHead>Product</TableHead>
                        <TableHead className="text-right">Amount</TableHead>
                        <TableHead className="text-right">Vat ID</TableHead>
                        <TableHead className="text-right">Vat Rate</TableHead>
                        <TableHead className="text-right">Vat Amount</TableHead>
                        <TableHead className="text-right">Vat Base</TableHead>
                      </TableRow>
                    </TableHeader>
                    <TableBody>
                      {invoice.InvoiceLines.map((invoiceLine) => (
                        <TableRow key={invoiceLine.Id}>
                          <TableCell>{invoiceLine.Id}</TableCell>
                          <TableCell>
                            {invoiceLine.ProductGroup.Description}
                          </TableCell>
                          <TableCell className="text-right">
                            {invoiceLine.Amount}
                          </TableCell>
                          <TableCell className="text-right">
                            {invoiceLine.Vat.Id}
                          </TableCell>
                          <TableCell className="text-right">
                            {invoiceLine.Vat.Rate}
                          </TableCell>
                          <TableCell className="text-right">
                            {invoiceLine.Vat.Amount}
                          </TableCell>
                          <TableCell className="text-right">
                            {invoiceLine.Vat.VatBase}
                          </TableCell>
                        </TableRow>
                      ))}
                    </TableBody>
                  </Table>
                </Card>
              ))}
            </TabsContent>
            <TabsContent value="trips">
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>Created on</TableHead>
                    <TableHead>Scan by</TableHead>
                    <TableHead>Matchd</TableHead>
                    <TableHead>Hit</TableHead>
                    <TableHead>Revalidated</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  <TableRow>
                    <TableCell className="font-medium">12.1.1990</TableCell>
                    <TableCell>Tom Wilson</TableCell>
                    <TableCell>✅</TableCell>
                    <TableCell>✅</TableCell>
                    <TableCell>✅</TableCell>
                  </TableRow>
                </TableBody>
              </Table>
            </TabsContent>
          </Tabs>
        </div>
      </div>
      <div className="grid gap-6">
        <Card className="p-6">
          <div className="grid gap-4">
            <div className="flex items-center justify-between">
              <h3 className="text-xl font-bold">Merchant Details</h3>
              <Button size="sm" variant="outline">
                View Merchant
              </Button>
            </div>
            <div className="grid gap-2">
              <div className="flex items-center gap-2">
                <UserIcon className="w-5 h-5 text-gray-500 " />
                <span className="font-medium">{tag.Merchant.Name}</span>
              </div>
              <div className="flex items-center gap-2">
                <MailIcon className="w-5 h-5 text-gray-500 " />
                <span>
                  product groups:
                  {tag.Merchant.ProductGroups.map(
                    (productGroup) => productGroup.Description
                  ).join(',')}
                </span>
              </div>
              <div className="flex items-center gap-2">
                <MapPinIcon className="w-5 h-5 text-gray-500 " />
                <span>Address: {tag.Merchant.Address.FullText}</span>
              </div>
            </div>
          </div>
        </Card>
        <Card className="p-6">
          <div className="grid gap-4">
            <div className="flex items-center justify-between">
              <h3 className="text-xl font-bold">Traveler Details</h3>
              <Button size="sm" variant="outline">
                View Traveler
              </Button>
            </div>
            <div className="grid gap-2">
              <div className="flex items-center gap-2">
                <UserIcon className="w-5 h-5 text-gray-500 " />
                <span className="font-medium">
                  {`${tag.Traveller.Name} ${tag.Traveller.Surname}`}
                </span>
              </div>
              <div className="flex items-center gap-2">
                <MailIcon className="w-5 h-5 text-gray-500 " />
                <span>{tag.Traveller.Nationality}</span>
              </div>
              <div className="flex items-center gap-2">
                <MapPinIcon className="w-5 h-5 text-gray-500 " />
                <span>Residency: {tag.Traveller.CountryOfResidence}</span>
              </div>
              <div className="flex items-center gap-2">
                <MapPinIcon className="w-5 h-5 text-gray-500 " />
                <span>Citizeship: {tag.Traveller.Nationality}</span>
              </div>
            </div>
          </div>
        </Card>
        <Card className="p-6">
          <div className="grid gap-4">
            <div className="flex items-center justify-between">
              <h3 className="text-xl font-bold">Trip Details</h3>
              <Button size="sm" variant="outline">
                View Trip
              </Button>
            </div>
            <div className="grid gap-2">
              <div className="flex items-center gap-2">
                <CalendarDaysIcon className="w-5 h-5 text-gray-500 " />
                <span className="font-medium">Visit</span>
              </div>
              <div className="flex items-center gap-2">
                <MapPinIcon className="w-5 h-5 text-gray-500 " />
                <span>Flight number: {tag.Trip.FlightNumber}</span>
              </div>
              <div className="flex items-center gap-2">
                <PlaneIcon className="w-5 h-5 text-gray-500 " />
                <span>Departure: {tag.Trip.DepartingAirport.Name}</span>
              </div>
              <div className="flex items-center gap-2">
                <PlaneIcon className="w-5 h-5 text-gray-500 " />
                <span>Destination: {tag.Trip.DestinationAirport.Name}</span>
              </div>
            </div>
          </div>
        </Card>
      </div>
    </div>
  );
}

const CalendarDaysIcon = (props: React.HTMLAttributes<SVGSVGElement>) => (
  <svg
    {...props}
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
  >
    <path d="M8 2v4" />
    <path d="M16 2v4" />
    <rect width="18" height="18" x="3" y="4" rx="2" />
    <path d="M3 10h18" />
    <path d="M8 14h.01" />
    <path d="M12 14h.01" />
    <path d="M16 14h.01" />
    <path d="M8 18h.01" />
    <path d="M12 18h.01" />
    <path d="M16 18h.01" />
  </svg>
);

const MailIcon = (props: React.HTMLAttributes<SVGSVGElement>) => (
  <svg
    {...props}
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
  >
    <rect width="20" height="16" x="2" y="4" rx="2" />
    <path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7" />
  </svg>
);

const MapPinIcon = (props: React.HTMLAttributes<SVGSVGElement>) => (
  <svg
    {...props}
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
  >
    <path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z" />
    <circle cx="12" cy="10" r="3" />
  </svg>
);

const PlaneIcon = (props: React.HTMLAttributes<SVGSVGElement>) => (
  <svg
    {...props}
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
  >
    <path d="M17.8 19.2 16 11l3.5-3.5C21 6 21.5 4 21 3c-1-.5-3 0-4.5 1.5L13 8 4.8 6.2c-.5-.1-.9.1-1.1.5l-.3.5c-.2.5-.1 1 .3 1.3L9 12l-2 3H4l-1 1 3 2 2 3 1-1v-3l3-2 3.5 5.3c.3.4.8.5 1.3.3l.5-.2c.4-.3.6-.7.5-1.2z" />
  </svg>
);

const UserIcon = (props: React.HTMLAttributes<SVGSVGElement>) => (
  <svg
    {...props}
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
  >
    <path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2" />
    <circle cx="12" cy="7" r="4" />
  </svg>
);
